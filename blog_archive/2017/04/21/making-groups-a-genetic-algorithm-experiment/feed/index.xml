<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	
	>
<channel>
	<title>
	Comments on: Making Groups &#8211; A Genetic Algorithm Experiment	</title>
	<atom:link href="/2017/04/21/making-groups-a-genetic-algorithm-experiment/feed/" rel="self" type="application/rss+xml" />
	<link>/2017/04/21/making-groups-a-genetic-algorithm-experiment/</link>
	<description>iteration, making, building, and coding in education</description>
	<lastBuildDate>Mon, 25 Dec 2017 20:59:28 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.6</generator>
	<item>
		<title>
		By: Evan Weinberg		</title>
		<link>/2017/04/21/making-groups-a-genetic-algorithm-experiment/#comment-504</link>

		<dc:creator><![CDATA[Evan Weinberg]]></dc:creator>
		<pubDate>Mon, 25 Dec 2017 20:59:28 +0000</pubDate>
		<guid isPermaLink="false">/?p=2703#comment-504</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/2017/04/21/making-groups-a-genetic-algorithm-experiment/#comment-503&quot;&gt;NickTheTurtle&lt;/a&gt;.

This is great to see Dominick - thanks for letting me know about your experiment!]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/2017/04/21/making-groups-a-genetic-algorithm-experiment/#comment-503">NickTheTurtle</a>.</p>
<p>This is great to see Dominick &#8211; thanks for letting me know about your experiment!</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: NickTheTurtle		</title>
		<link>/2017/04/21/making-groups-a-genetic-algorithm-experiment/#comment-503</link>

		<dc:creator><![CDATA[NickTheTurtle]]></dc:creator>
		<pubDate>Tue, 28 Nov 2017 01:44:09 +0000</pubDate>
		<guid isPermaLink="false">/?p=2703#comment-503</guid>

					<description><![CDATA[I tried to minimize the conflicts in my school&#039;s schedule using a genetic algorithm. It didn&#039;t work out (I had to use a more &quot;direct&quot; algorithm), but it was a fun experience.]]></description>
			<content:encoded><![CDATA[<p>I tried to minimize the conflicts in my school&#8217;s schedule using a genetic algorithm. It didn&#8217;t work out (I had to use a more &#8220;direct&#8221; algorithm), but it was a fun experience.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Evan Weinberg		</title>
		<link>/2017/04/21/making-groups-a-genetic-algorithm-experiment/#comment-501</link>

		<dc:creator><![CDATA[Evan Weinberg]]></dc:creator>
		<pubDate>Sat, 22 Apr 2017 00:56:47 +0000</pubDate>
		<guid isPermaLink="false">/?p=2703#comment-501</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/2017/04/21/making-groups-a-genetic-algorithm-experiment/#comment-500&quot;&gt;Andy &quot;SuperFly&quot; Rundquist&lt;/a&gt;.

No Andy, I&#039;m every bit as lazy as you. (I mean this as a good thing!)

In the score calculation step, I put in a major penalty if there is someone in the group that is in a group member&#039;s exclude list. I think one of my struggles with the entire algorithm was whether a penalty would be tough enough to prevent one of the things I didn&#039;t want to happen. How do I know if a penalty is enough? Do I need to actually do a final algorithmic check in the end to make sure that these rules isn&#039;t violated?

Now that I&#039;ve actually done it, I can see that it&#039;s pretty easy to verify whether this is the case or not from the score. I also feel more comfortable with my skills using Javascript objects to monitor this themselves and &#039;announce&#039; they have problems rather than having to do a set of logical checks in the end of a beefy array. Trusting the algorithm to work was key.]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/2017/04/21/making-groups-a-genetic-algorithm-experiment/#comment-500">Andy &#8220;SuperFly&#8221; Rundquist</a>.</p>
<p>No Andy, I&#8217;m every bit as lazy as you. (I mean this as a good thing!)</p>
<p>In the score calculation step, I put in a major penalty if there is someone in the group that is in a group member&#8217;s exclude list. I think one of my struggles with the entire algorithm was whether a penalty would be tough enough to prevent one of the things I didn&#8217;t want to happen. How do I know if a penalty is enough? Do I need to actually do a final algorithmic check in the end to make sure that these rules isn&#8217;t violated?</p>
<p>Now that I&#8217;ve actually done it, I can see that it&#8217;s pretty easy to verify whether this is the case or not from the score. I also feel more comfortable with my skills using Javascript objects to monitor this themselves and &#8216;announce&#8217; they have problems rather than having to do a set of logical checks in the end of a beefy array. Trusting the algorithm to work was key.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Andy "SuperFly" Rundquist		</title>
		<link>/2017/04/21/making-groups-a-genetic-algorithm-experiment/#comment-500</link>

		<dc:creator><![CDATA[Andy "SuperFly" Rundquist]]></dc:creator>
		<pubDate>Fri, 21 Apr 2017 14:15:25 +0000</pubDate>
		<guid isPermaLink="false">/?p=2703#comment-500</guid>

					<description><![CDATA[It&#039;s interesting that when I do this ( https://arundquist.wordpress.com/2012/10/15/matching-students-with-projects/ ) I don&#039;t bother with your first two steps, which I interpreted as starting the population making sure you haven&#039;t violated any hard rules. Instead I&#039;m lazy and just randomly place people and have a huge fitness penalty for any candidates that break those hard rules. I say lazy because I think your way is probably better but I do like how it always works out in the end (the final solution always avoids those heavy penalties). It&#039;s possible I misinterpreted what you said and you do the same, of course.]]></description>
			<content:encoded><![CDATA[<p>It&#8217;s interesting that when I do this ( <a href="https://arundquist.wordpress.com/2012/10/15/matching-students-with-projects/" rel="nofollow ugc">https://arundquist.wordpress.com/2012/10/15/matching-students-with-projects/</a> ) I don&#8217;t bother with your first two steps, which I interpreted as starting the population making sure you haven&#8217;t violated any hard rules. Instead I&#8217;m lazy and just randomly place people and have a huge fitness penalty for any candidates that break those hard rules. I say lazy because I think your way is probably better but I do like how it always works out in the end (the final solution always avoids those heavy penalties). It&#8217;s possible I misinterpreted what you said and you do the same, of course.</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
