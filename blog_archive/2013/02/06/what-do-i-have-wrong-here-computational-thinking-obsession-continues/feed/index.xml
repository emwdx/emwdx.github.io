<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	
	>
<channel>
	<title>
	Comments on: What do I have wrong here? Computational thinking obsession continues	</title>
	<atom:link href="/2013/02/06/what-do-i-have-wrong-here-computational-thinking-obsession-continues/feed/" rel="self" type="application/rss+xml" />
	<link>/2013/02/06/what-do-i-have-wrong-here-computational-thinking-obsession-continues/</link>
	<description>iteration, making, building, and coding in education</description>
	<lastBuildDate>Thu, 07 Feb 2013 06:14:21 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.6</generator>
	<item>
		<title>
		By: David Wees		</title>
		<link>/2013/02/06/what-do-i-have-wrong-here-computational-thinking-obsession-continues/#comment-172</link>

		<dc:creator><![CDATA[David Wees]]></dc:creator>
		<pubDate>Thu, 07 Feb 2013 06:14:21 +0000</pubDate>
		<guid isPermaLink="false">/?p=943#comment-172</guid>

					<description><![CDATA[I think you have a really good argument here, and one I have presented before myself. I&#039;m going to be presenting on technology in math in a couple of days, and I hope you don&#039;t mind if I use your example in my presentation (with appropriate reference of course).]]></description>
			<content:encoded><![CDATA[<p>I think you have a really good argument here, and one I have presented before myself. I&#8217;m going to be presenting on technology in math in a couple of days, and I hope you don&#8217;t mind if I use your example in my presentation (with appropriate reference of course).</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: dawndup		</title>
		<link>/2013/02/06/what-do-i-have-wrong-here-computational-thinking-obsession-continues/#comment-171</link>

		<dc:creator><![CDATA[dawndup]]></dc:creator>
		<pubDate>Thu, 07 Feb 2013 02:58:10 +0000</pubDate>
		<guid isPermaLink="false">/?p=943#comment-171</guid>

					<description><![CDATA[Not much else to add except that your questions resonated with me, and I am forwarding the video to colleagues.  I have the same philosophical struggles and have worked with my middle school students on computerized approaches as well as algebraic reasoning... but I am struggling with the process, and I am more or less working on an island as I try to sort it out.]]></description>
			<content:encoded><![CDATA[<p>Not much else to add except that your questions resonated with me, and I am forwarding the video to colleagues.  I have the same philosophical struggles and have worked with my middle school students on computerized approaches as well as algebraic reasoning&#8230; but I am struggling with the process, and I am more or less working on an island as I try to sort it out.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Rob St. Amant		</title>
		<link>/2013/02/06/what-do-i-have-wrong-here-computational-thinking-obsession-continues/#comment-170</link>

		<dc:creator><![CDATA[Rob St. Amant]]></dc:creator>
		<pubDate>Wed, 06 Feb 2013 14:03:04 +0000</pubDate>
		<guid isPermaLink="false">/?p=943#comment-170</guid>

					<description><![CDATA[Excellent discussion!

As a computer scientist, I can&#039;t say much about teaching algebra per se. But I have thought a good bit about computational thinking. Here goes...

When I try successive guesses to solve this problem, I&#039;m looking at it as search. (In computer science, we&#039;d call this &quot;uninformed search&quot;.) Formulating a problem as search takes some skill and practice; in this case, here&#039;s what I might think. First, I&#039;d ask whether adding 1 to the guess of the first number moves me closer to a solution. (Yes.) Second, I&#039;d ask whether this adding 1 step will stop on a solution if it exists, or if it might jump over it. (Unclear, but it could in principle be in the problem statement.) I might then try it.

And then I&#039;d think, &quot;Could I get to a solution faster if I took bigger jumps?&quot; This would mean thinking about how far away I am from a solution, judging by the ratio of the two numbers I have at any point. I might add an adjustable increment to the first number, depending on how far away I am from a solution.

And then I might think about when I should use one algorithm rather than the other... (This last piece isn&#039;t needed for algebra, but it&#039;s basic computer science.)

There&#039;s a lot of conceptual background that someone needs to have to apply computation to even a simple problem. I think it&#039;s worthwhile; there&#039;s a lot of richness in computational thinking. Unfortunately, the thinking process I&#039;ve laid out assumes that someone is *already* comfortable with algebra, as well as with the ideas of algorithms, searching, and so forth. Oh, well.

I&#039;ll apologize for the plug, but I talk about these sorts of things in &lt;a href=&quot;http://ordinary-mortals.blogspot.com/2012/10/the-book.html&quot; rel=&quot;nofollow ugc&quot;&gt;Computing for Ordinary Mortals&lt;/a&gt; (Oxford, 2012), a popular science book that gives a basic introduction to computational thinking.]]></description>
			<content:encoded><![CDATA[<p>Excellent discussion!</p>
<p>As a computer scientist, I can&#8217;t say much about teaching algebra per se. But I have thought a good bit about computational thinking. Here goes&#8230;</p>
<p>When I try successive guesses to solve this problem, I&#8217;m looking at it as search. (In computer science, we&#8217;d call this &#8220;uninformed search&#8221;.) Formulating a problem as search takes some skill and practice; in this case, here&#8217;s what I might think. First, I&#8217;d ask whether adding 1 to the guess of the first number moves me closer to a solution. (Yes.) Second, I&#8217;d ask whether this adding 1 step will stop on a solution if it exists, or if it might jump over it. (Unclear, but it could in principle be in the problem statement.) I might then try it.</p>
<p>And then I&#8217;d think, &#8220;Could I get to a solution faster if I took bigger jumps?&#8221; This would mean thinking about how far away I am from a solution, judging by the ratio of the two numbers I have at any point. I might add an adjustable increment to the first number, depending on how far away I am from a solution.</p>
<p>And then I might think about when I should use one algorithm rather than the other&#8230; (This last piece isn&#8217;t needed for algebra, but it&#8217;s basic computer science.)</p>
<p>There&#8217;s a lot of conceptual background that someone needs to have to apply computation to even a simple problem. I think it&#8217;s worthwhile; there&#8217;s a lot of richness in computational thinking. Unfortunately, the thinking process I&#8217;ve laid out assumes that someone is *already* comfortable with algebra, as well as with the ideas of algorithms, searching, and so forth. Oh, well.</p>
<p>I&#8217;ll apologize for the plug, but I talk about these sorts of things in <a href="http://ordinary-mortals.blogspot.com/2012/10/the-book.html" rel="nofollow ugc">Computing for Ordinary Mortals</a> (Oxford, 2012), a popular science book that gives a basic introduction to computational thinking.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: goldenoj		</title>
		<link>/2013/02/06/what-do-i-have-wrong-here-computational-thinking-obsession-continues/#comment-169</link>

		<dc:creator><![CDATA[goldenoj]]></dc:creator>
		<pubDate>Wed, 06 Feb 2013 13:16:34 +0000</pubDate>
		<guid isPermaLink="false">/?p=943#comment-169</guid>

					<description><![CDATA[The strongest aspect of this is how much the programming helps develop the other meaning of variable, expressing relationship. Variable as unknown is much more accessible to students. But the programming is much more conducive to input-output thinking, which is so key for continuing on in math. I really think there&#039;s something here.

The example suffers a bit from simplicity: hopefully some student will think a number + 3 x number is 4x number. Answer must be 1284/4. Or if doing guess and check would be using number sense to guess 100 first or after 1 or...]]></description>
			<content:encoded><![CDATA[<p>The strongest aspect of this is how much the programming helps develop the other meaning of variable, expressing relationship. Variable as unknown is much more accessible to students. But the programming is much more conducive to input-output thinking, which is so key for continuing on in math. I really think there&#8217;s something here.</p>
<p>The example suffers a bit from simplicity: hopefully some student will think a number + 3 x number is 4x number. Answer must be 1284/4. Or if doing guess and check would be using number sense to guess 100 first or after 1 or&#8230;</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
