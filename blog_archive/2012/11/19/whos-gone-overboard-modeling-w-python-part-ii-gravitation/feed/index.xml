<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	
	>
<channel>
	<title>
	Comments on: Whoâ€™s gone overboard modeling w/ Python? Part II &#8211; Gravitation	</title>
	<atom:link href="/2012/11/19/whos-gone-overboard-modeling-w-python-part-ii-gravitation/feed/" rel="self" type="application/rss+xml" />
	<link>/2012/11/19/whos-gone-overboard-modeling-w-python-part-ii-gravitation/</link>
	<description>iteration, making, building, and coding in education</description>
	<lastBuildDate>Tue, 20 Nov 2012 00:55:52 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.6</generator>
	<item>
		<title>
		By: Evan Weinberg		</title>
		<link>/2012/11/19/whos-gone-overboard-modeling-w-python-part-ii-gravitation/#comment-148</link>

		<dc:creator><![CDATA[Evan Weinberg]]></dc:creator>
		<pubDate>Tue, 20 Nov 2012 00:55:52 +0000</pubDate>
		<guid isPermaLink="false">/?p=793#comment-148</guid>

					<description><![CDATA[In reply to &lt;a href=&quot;/2012/11/19/whos-gone-overboard-modeling-w-python-part-ii-gravitation/#comment-147&quot;&gt;Andy &quot;SuperFly&quot; Rundquist&lt;/a&gt;.

Thanks Andy - I completely agree that using a simulation is a process that demands that students do a bit more than get an answer. It&#039;s hard sometimes to ask students to do analysis of their answer (does your answer make sense?) but it&#039;s easy to have a conversation about whether a model fits observations or measurements or not.

I think there are a few approaches to counter the argument about how computers can be programmed to do anything. The first is that the computer model is not creating results that exist independently of the real world. The program isn&#039;t inventing laws of physics - instead we are using what we understand about the laws of physics to construct a computer model. The next step - and this MUST be the next step if this argument is to work - is to compare those results to observations. If the model is a good one, the computer model must behave in a way similar to what is observed. If this comparison isn&#039;t done, then the abstraction of the computer model never becomes more than one more abstract idea, divorced from reality, that students collect during their education. There must be a connection between the model and the physical world for it to be valuable work. 

I had students adjust the constant velocity model I gave them to match a moving car, essentially the buggy lab that comes from the Modeling Instruction curriculum. There is a lot of really good thinking that happens during that matching process that doesn&#039;t happen as naturally as when attempting to do it with graphs and equations. The computer model is describing what is happening to this real world object, and student can see the similarities.

I first learned about some of the details about computer models during a summer internship in college. I was working with some scientists working in microgravity science, and picked up on a general sense among these scientists that the only way to study certain phenomena was to do simulation. Trying to investigate things like capillary flows, for example, in 1-g is almost pointless in some situations because gravity dominates. I was having a conversation with the head of the center about what I was learning, and he seemed irritated when I seemed parroted back some of what he clearly heard from his scientists about simulation and its role. His comment was really interesting. 

He said something along the lines that people always talk about having to study fluid dynamics in microgravity because gravity &#039;hides&#039; things. Gravity doesn&#039;t hide anything. Gravity is an observable phenomenon just as surface tension, convection, and the other things that people tend to obsess about in microgravity. The utility of these simulations ends when they stop producing results that can actually be verified by experiment or observation. Saying that a computer model shows a phenomenon that can only be verified by placing an experiment in space for a year requires a lot of trust in the model itself, and that model should do a good job of predicting what is happening in gravity as well before funding the project with thousands of dollars. (He is a well known fluid physicist that had an experiment investigating both surface tension and convection fly on the shuttle a couple times. It was pretty cool to hear him talk this way about his own field.)

It&#039;s true that you can design a simulation that does not follow Newton&#039;s laws, and then perhaps convince students that it is correct. That is dangerous. Putting the model first and never exposing it to reality is the major danger of using it in teaching. It&#039;s hard to ignore when a simulation seems to contradict what one&#039;s own eyes observe. As long as we make comparison with reality an integral component of our use of simulation in teaching, it will be valuable for learning.]]></description>
			<content:encoded><![CDATA[<p>In reply to <a href="/2012/11/19/whos-gone-overboard-modeling-w-python-part-ii-gravitation/#comment-147">Andy &#8220;SuperFly&#8221; Rundquist</a>.</p>
<p>Thanks Andy &#8211; I completely agree that using a simulation is a process that demands that students do a bit more than get an answer. It&#8217;s hard sometimes to ask students to do analysis of their answer (does your answer make sense?) but it&#8217;s easy to have a conversation about whether a model fits observations or measurements or not.</p>
<p>I think there are a few approaches to counter the argument about how computers can be programmed to do anything. The first is that the computer model is not creating results that exist independently of the real world. The program isn&#8217;t inventing laws of physics &#8211; instead we are using what we understand about the laws of physics to construct a computer model. The next step &#8211; and this MUST be the next step if this argument is to work &#8211; is to compare those results to observations. If the model is a good one, the computer model must behave in a way similar to what is observed. If this comparison isn&#8217;t done, then the abstraction of the computer model never becomes more than one more abstract idea, divorced from reality, that students collect during their education. There must be a connection between the model and the physical world for it to be valuable work. </p>
<p>I had students adjust the constant velocity model I gave them to match a moving car, essentially the buggy lab that comes from the Modeling Instruction curriculum. There is a lot of really good thinking that happens during that matching process that doesn&#8217;t happen as naturally as when attempting to do it with graphs and equations. The computer model is describing what is happening to this real world object, and student can see the similarities.</p>
<p>I first learned about some of the details about computer models during a summer internship in college. I was working with some scientists working in microgravity science, and picked up on a general sense among these scientists that the only way to study certain phenomena was to do simulation. Trying to investigate things like capillary flows, for example, in 1-g is almost pointless in some situations because gravity dominates. I was having a conversation with the head of the center about what I was learning, and he seemed irritated when I seemed parroted back some of what he clearly heard from his scientists about simulation and its role. His comment was really interesting. </p>
<p>He said something along the lines that people always talk about having to study fluid dynamics in microgravity because gravity &#8216;hides&#8217; things. Gravity doesn&#8217;t hide anything. Gravity is an observable phenomenon just as surface tension, convection, and the other things that people tend to obsess about in microgravity. The utility of these simulations ends when they stop producing results that can actually be verified by experiment or observation. Saying that a computer model shows a phenomenon that can only be verified by placing an experiment in space for a year requires a lot of trust in the model itself, and that model should do a good job of predicting what is happening in gravity as well before funding the project with thousands of dollars. (He is a well known fluid physicist that had an experiment investigating both surface tension and convection fly on the shuttle a couple times. It was pretty cool to hear him talk this way about his own field.)</p>
<p>It&#8217;s true that you can design a simulation that does not follow Newton&#8217;s laws, and then perhaps convince students that it is correct. That is dangerous. Putting the model first and never exposing it to reality is the major danger of using it in teaching. It&#8217;s hard to ignore when a simulation seems to contradict what one&#8217;s own eyes observe. As long as we make comparison with reality an integral component of our use of simulation in teaching, it will be valuable for learning.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Andy "SuperFly" Rundquist		</title>
		<link>/2012/11/19/whos-gone-overboard-modeling-w-python-part-ii-gravitation/#comment-147</link>

		<dc:creator><![CDATA[Andy "SuperFly" Rundquist]]></dc:creator>
		<pubDate>Mon, 19 Nov 2012 12:20:16 +0000</pubDate>
		<guid isPermaLink="false">/?p=793#comment-147</guid>

					<description><![CDATA[This is really cool. I love reminding students that the computers back when we went to the moon couldn&#039;t really do any of this.

I also really like how you&#039;re talking about the connections between programming, modeling, and learning physics. When my students create a simulation that doesn&#039;t &quot;look right,&quot; they are starting to realize that they need to think harder about the physics.

I keep hearing people say things like &quot;students don&#039;t learn as much from simulations because they think you can make the computer do anything.&quot; How do you think exposing them to programming helps with that?]]></description>
			<content:encoded><![CDATA[<p>This is really cool. I love reminding students that the computers back when we went to the moon couldn&#8217;t really do any of this.</p>
<p>I also really like how you&#8217;re talking about the connections between programming, modeling, and learning physics. When my students create a simulation that doesn&#8217;t &#8220;look right,&#8221; they are starting to realize that they need to think harder about the physics.</p>
<p>I keep hearing people say things like &#8220;students don&#8217;t learn as much from simulations because they think you can make the computer do anything.&#8221; How do you think exposing them to programming helps with that?</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
